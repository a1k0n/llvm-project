//===-- MCS51Subtarget.h - Define Subtarget for the MCS51 -------*- C++ -*-===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This file declares the MCS51 specific subclass of TargetSubtargetInfo.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_MCS51_MCS51SUBTARGET_H
#define LLVM_LIB_TARGET_MCS51_MCS51SUBTARGET_H

#include "MCS51FrameLowering.h"
#include "MCS51ISelLowering.h"
#include "MCS51InstrInfo.h"
#include "llvm/CodeGen/SelectionDAGTargetInfo.h"
#include "llvm/CodeGen/TargetSubtargetInfo.h"
#include "llvm/IR/DataLayout.h"
#include "llvm/Target/TargetMachine.h"

#define GET_SUBTARGETINFO_HEADER
#include "MCS51GenSubtargetInfo.inc"

namespace llvm {
class StringRef;

class MCS51Subtarget : public MCS51GenSubtargetInfo {
  virtual void anchor();
  MCS51FrameLowering FrameLowering;
  MCS51InstrInfo InstrInfo;
  MCS51RegisterInfo RegInfo;
  MCS51TargetLowering TLInfo;
  SelectionDAGTargetInfo TSInfo;

  /// Initializes using the passed in CPU and feature strings so that we can
  /// use initializer lists for subtarget initialization.
  MCS51Subtarget &initializeSubtargetDependencies(StringRef CPU,
                                                  StringRef TuneCPU,
                                                  StringRef FS);

public:
  // Initializes the data members to match that of the specified triple.
  MCS51Subtarget(const Triple &TT, StringRef CPU, StringRef FS,
                 const TargetMachine &TM);

  // Parses features string setting specified subtarget options. The
  // definition of this function is auto-generated by tblgen.
  void ParseSubtargetFeatures(StringRef CPU, StringRef TuneCPU, StringRef FS);

  const MCS51FrameLowering *getFrameLowering() const override {
    return &FrameLowering;
  }
  const MCS51InstrInfo *getInstrInfo() const override { return &InstrInfo; }
  const MCS51RegisterInfo *getRegisterInfo() const override {
    return &RegInfo;
  }
  const MCS51TargetLowering *getTargetLowering() const override {
    return &TLInfo;
  }
  const SelectionDAGTargetInfo *getSelectionDAGInfo() const override {
    return &TSInfo;
  }
};
} // End llvm namespace

#endif

